/* @import "darkmode.css";  */

:root{
  --counter: 0;
  --black: #000;
  --brown:#673013;
}

*::selection{
  color: red;
}

/* input[name="dark-mode"]:checked{
  --black-mode:  #000;
} */


:lang(ar){
  direction: ltr;
}

:lang(ar) :not(div), 
:lang(heb) :not(div),
:lang(dv) :not(div),
:lang(ku) :not(div),
:lang(fa) :not(div),
:lang(ur) :not(div){
  direction: rtl;
}

:lang(zh){
  writing-mode: vertical-rl;
}

:lang(zh) section {
  writing-mode: horizontal-tb;
}

body{
  font-size: 100%;
  font-family: sans-serif;
  background-color: var(--black-mode, var(--brown));
  color: var(--white-mode, #000)
}

h1{
  color:white;
  text-align: center;
}

h1::selection{
  text-shadow: 5px 5px black;
}



form{
  display: grid;
  grid-auto-columns: minmax(max-content, 2fr);
}

label{
  display: block;
  width: 7rem;
  height: 7rem;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center center;
}

label:hover{
  transition: transform 9s;
  /* backface-visibility: visible; */
}

label:nth-last-of-type(odd):hover{
  transform: scale(1.1) rotateX(360deg) perspective(1000px);
}

label:nth-last-of-type(even):hover{
  transform: scale(1.1) rotateY(-360deg) perspective(1000px);
}




/* label:not([for^="alc-"])::before{
  background-color: #673013;
  width: 100%;
  content: 'fwefwf';
  height: 3rem;
  position: absolute;
  z-index: -1;
} */


label{
  filter: var(--background-grayscale);
}

label[for=vodka]{
  background-image: url(../img/vodka-label.png);
}

label[for=beer]{
  background-image: url(../img/beer-label.png);
}

label[for=mushrooms]{
  background-image: url(../img/mushroom-label.png);
}

embed{
  opacity: 0;
  display: none;
  width: 0%;
}

/* input[type="radio"][value="vodka"]:checked ~ section:nth-of-type(1) article:hover{
  cursor: url("../img/vodka.png"), auto;
  animation: drunk-mode-container 3s infinite;
} */

/* Drunk animation on person */ 

input[type="radio"][value="vodka"]:checked ~ section:nth-of-type(1) article:hover{
  cursor: url("../img/vodka.png"), auto;
  animation: var(--animation, drunk-mode 10s infinite, drunk-mode-container 3s infinite);
}

input[type="radio"][value="mushrooms"]:checked ~ section:nth-of-type(1) article:hover{
  cursor: url("../img/mushroom.png"), auto;
  animation: var(--animation, trip-mode 30s infinite, drunk-mode 10s infinite);
}

input[type="radio"][value="mushrooms"]:checked ~ section:nth-of-type(1) article:hover ~ embed{
  display: block;
}

input[type="radio"][value="vodka"]:checked ~ section:nth-of-type(1){
  cursor: url("../img/vodka.png"), auto;
}

input[type="radio"][value="vodka"]:checked ~ section:nth-of-type(1) article header{
  cursor: url("../img/vodka-rotate.png"), auto;
}

input[type="radio"][value="beer"]:checked ~ section:nth-of-type(1){
  cursor: url("../img/beer1.png"), auto;
}

input[type="radio"][value="beer"]:checked ~ section:nth-of-type(1) article header{
  cursor: url("../img/beer-rotate.png"), auto;
}

input[type="radio"][value="1"]:checked ~ section article::after{
  content: '1';
}

input[type="radio"][value="1"]:checked ~ section:nth-of-type(1){
  animation: var(--animation, drunk-section 3s infinite);
  background-color: red;
}

@keyframes drunk-section{
  0%, 100%{
    transform: perspective(1000px) rotateY(0deg);
    transform-origin: left;
  }

  50%{
    transform-origin: left;
    transform: perspective(1000px) rotateY(15deg);
  }
}

/* input[type="radio"][value="2"]:checked ~ section article::after{
  content: '2';
}
input[type="radio"][value="3"]:checked ~ section article::after{
  content: '3';
}
input[type="radio"][value="4"]:checked ~ section article::after{
  content: '4';
}

input[type="radio"][value="5"]:checked ~ section article::after{
  content: '5';
} */

section:nth-of-type(1){
  position: relative;
  /* cursor: url("../img/beer1.png"), auto; */
  /* height: 10rem; */
  background-color: var(--test);
  display: flex;
  justify-content: center;
  background-color: var(--black-mode, burlywood);
  height: 40rem;
}



/* section:nth-of-type(1) article header{
  cursor: url("../img/beer-rotate.png"), auto;
} */

article{
  /* width: 30rem;
  height: 30rem; */
  margin: 5rem 0 0 0;
}

article header,
article header::after{
  height: 25vw;
  width: 50vw;
  background-color: var(--white-mode, sandybrown)
}

article header{
  border-radius: 50vw 50vw 0 0;
  display: flex;
  align-items: center;
  flex-direction: column;
}

article header::after{
  content: '';
  position: absolute;
  top: 25.25vw;
  transform: translate(0px, 5rem);
  border-radius: 0 0 50vw 50vw;
  transition: transform .5s;
}

article header::before{
  content: '';
  position: absolute;
  top: 25.25vw;
}

input[type=checkbox]:checked article header:hover::after{
  transform: translate(0px, 13vw);
}

article header > div:nth-of-type(1){
  transform: translate(0px, 13vw);
  display: flex;
  width: 50%;
  justify-content: space-between;
}

article header > div:nth-of-type(1) div{
  width: 2.5vw;
  height: 2.5vw;
  border-radius: 3vw;
  background-color: var(--black);
}

/* Eyebrows */
article header > div:nth-of-type(1) div::before{
  content: '';
  height: 1vh;
  width: 7.5vw;
  position: absolute;
  background-color: var(--black);
  transform: translate(-30%, -145%);
  min-height: .5rem;
}

article header > div:nth-of-type(1) div:nth-of-type(1)::before,
article header > div:nth-of-type(1) div:nth-of-type(2)::before{
  transition: transform .5s;
}

article header > div:nth-of-type(1) div:nth-of-type(1)::before{
  transform: translate(-60%, -145%) rotate(-45deg);
}

article header > div:nth-of-type(1) div:nth-of-type(2)::before{
  transform: translate(0%, -145%) rotate(45deg);
}

article:hover header > div:nth-of-type(1) div:nth-of-type(1)::before{
  transform: translate(-60%, -300%) rotate(-45deg);
  transition: .5s;
}

article:hover header > div:nth-of-type(1) div:nth-of-type(2)::before{
  transform: translate(0%, -300%) rotate(45deg);
  transition: .5s;
}

div article::after{
  /* content: "Alc. "counter(alcohol-level)"%"; */
  position: absolute;
  top: 1rem;
  left: 15rem;
  font-size: 2rem;
}

input[name=test]:checked ~ section{
  animation: var(--animation, drunk-mode-container 10s infinite);
}

/* For animating the section which gets a blur overlay */
input[name=test]:checked ~ section article{
  animation: var(--animation, drunk-mode 10s infinite);
}


/* Mushrooms */
/* input[name=mushrooms]:checked ~ section{
  animation: trip-mode 10s infinite;
} */

input[name=test]:checked ~ section article{
  animation: drunk-mode 10s infinite reverse;
}


div article header:hover{
  animation: var(--animation, alcohol-up 3s .3s normal forwards);
}

/* @keyframes alcohol-up{

  20%{
    counter-increment: alcohol-level 1;
  }
  40%{
    counter-increment: alcohol-level 2;
  }

  60%{
    counter-increment: alcohol-level 3;
  }

  80%{
    counter-increment: alcohol-level 4;
  }

  100%{
    counter-increment: alcohol-level 5;
  }
} */

section{
  page-break-after: always ;
}

@keyframes trip-mode{
  0%, 40%, 80%{
    filter: hue-rotate(1turn) drop-shadow(16px 16px 20px blue) invert(75%) blur(0);
  }

  20%, 60%{
    filter: hue-rotate(0turn) drop-shadow(16px 16px 20px red) invert(0%) blur(1rem);
  }
}

@keyframes drunk-mode-container{


  0%, 40%, 80%{
    filter: blur(0);

  }

  20%, 60%{
    filter: blur(12px);
  }
  /* 0%, 30%, 60%, 90%{
    transform: rotate(-10deg);
  }

  0%{
    transform: rotate(-10deg);
    filter: blur(0);
  }
  30%{
    filter: blur(1px);
  }
  40%{
    filter: blur(0);
  }
  45%{
    filter:blur(8px)
  }
  55%{
    filter: blur(1px);
  }

  70%{
    filter: blur(20px);
  }
  100%{
    filter: blur(0px);
    transform: rotate(10deg);
  } */
}


@keyframes drunk-mode{


  0%, 40%, 80%{
    transform: perspective(1000px) rotate3d(0, 0, 0, 0) ;
  }

  20%, 60%{
    transform: perspective(1000px) rotate3d(1, 1, 1, 30deg);
  }

 
}



/* * ~ section{
  page-break-after: always  ;
} */


@media (prefers-reduced-motion: reduce) {
  :root{
    --animation: none;
  }
}

@media print{
  body{
    background-color: red;
    -webkit-print-color-adjust: exact;
  }

  * ~ section{
    page-break-after: always  ;
  }
}

@media (prefers-color-scheme: dark) {

  
 
  /* body{
    background-color: var(--black-mode);
  } */

  :root{
    --black-mode: #000;
    --white-mode: #fff;
    --background-grayscale: grayscale(100%);
  }

  
}